user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
	##
	# Basic Settings
	##
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_tokens off;
	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##
	gzip on;
	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	## 
	# servers
	##
	server {
		listen 80;
		server_name www.MY_DOMAIN;
		return 301 https://MY_DOMAIN$request_uri;
	}

	server {
		listen 80;
		server_name MY_DOMAIN;

		location / {
			return 301 https://MY_DOMAIN$request_uri;
		}

		location ~ /.well-known/acme-challenge/ {
 		   	root /home/certbot;

			allow all;
			try_files $uri $uri/ =404;
		}
	}

	server {
		listen 443;
		server_name www.MY_DOMAIN;

		ssl_certificate /etc/letsencrypt/live/MY_DOMAIN/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/MY_DOMAIN/privkey.pem;
	
		return 301 https://MY_DOMAIN$request_uri;
	}

	server {
		listen 443 http2 ssl;
		server_name MY_DOMAIN;

		root /home/www;

		ssl_certificate /etc/letsencrypt/live/MY_DOMAIN/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/MY_DOMAIN/privkey.pem;

		error_page 404 /404.html;
		error_page 403 /404.html;

		location / {
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			try_files $uri $uri/ =404;
		}

		location /MY_SECRET_PATH {
			proxy_pass http://127.0.0.1:1337;
		}
	}
}